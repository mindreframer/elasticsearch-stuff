{
  "search": {
    "documentation": "http://www.elasticsearch.org/guide/reference/api/search/",
    "methods": ["GET", "POST"],
    "url": {
      "path": "/_search",
      "paths": ["/_search", "/{index}/_search", "/{index}/{type}/_search"],
      "parts": {
        "index": {
         "type" : "list",
         "default" : "_all",
         "description" : "A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
        },
        "type": {
          "type" : "list",
          "description" : "A comma-separated list of document types to search; leave empty to perform the operation on all types"
        }
      },
      "params": {
        "analyzer": {
          "type" : "string",
          "description" : "The analyzer to use for the query string"
        },
        "analyze_wildcard": {
          "type" : "boolean",
          "description" : "Specify whether wildcard and prefix queries should be analyzed (default: false)"
        },
        "default_operator": {
          "type" : "enum",
          "options" : ["AND","OR"],
          "default" : "OR",
          "description" : "The default operator for query string query (AND or OR)"
        },
        "df": {
          "type" : "string",
          "description" : "The field to use as default where no field prefix is given in the query string"
        },
        "explain": {
          "type" : "boolean",
          "description" : "Specify whether to return detailed information about score computation as part of a hit"
        },
        "fields": {
          "type" : "list",
          "description" : "A comma-separated list of fields to return as part of a hit"
        },
        "from": {
          "type" : "number",
          "description" : "Starting offset (default: 0)"
        },
        "ignore_indices": {
          "type" : "enum",
          "options" : ["none","missing"],
          "default" : "none",
          "description" : "When performed on multiple indices, allows to ignore `missing` ones"
        },
        "indices_boost": {
          "type" : "list",
          "description" : "Comma-separated list of index boosts"
        },
        "lenient": {
          "type" : "boolean",
          "description" : "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
        },
        "lowercase_expanded_terms": {
          "type" : "boolean",
          "description" : "Specify whether query terms should be lowercased"
        },
        "preference": {
          "type" : "string",
          "description" : "Specify the node or shard the operation should be performed on (default: random)"
        },
        "q": {
          "type" : "string",
          "description" : "Query in the Lucene query string syntax"
        },
        "routing": {
          "type" : "list",
          "description" : "A comma-separated list of specific routing values"
        },
        "scroll": {
          "type" : "duration",
          "description" : "Specify how long a consistent view of the index should be maintained for scrolled search"
        },
        "search_type": {
          "type" : "enum",
          "options" : ["query_then_fetch", "query_and_fetch", "dfs_query_then_fetch", "dfs_query_and_fetch", "count", "scan"],
          "description" : "Search operation type"
        },
        "size": {
          "type" : "number",
          "description" : "Number of hits to return (default: 10)"
        },
        "sort": {
          "type" : "list",
          "description" : "A comma-separated list of <field>:<direction> pairs"
        },
        "source": {
          "type" : "string",
          "description" : "The URL-encoded request definition using the Query DSL (instead of using request body)"
        },
        "_source": {
          "type" : "list",
          "description" : "True or false to return the _source field or not, or a list of fields to return"
        },
        "_source_exclude": {
          "type" : "list",
          "description" : "A list of fields to exclude from the returned _source field"
        },
        "_source_include": {
          "type" : "list",
          "description" : "A list of fields to extract and return from the _source field"
        },
        "stats": {
          "type" : "list",
          "description" : "Specific 'tag' of the request for logging and statistical purposes"
        },
        "suggest_field": {
          "type" : "string",
          "description" : "Specify which field to use for suggestions"
        },
        "suggest_mode": {
          "type" : "enum",
          "options" : ["missing", "popular", "always"],
          "default" : "missing",
          "description" : "Specify suggest mode"
        },
        "suggest_size": {
          "type" : "number",
          "description" : "How many suggestions to return in response"
        },
        "suggest_text": {
          "type" : "text",
          "description" : "The source text for which the suggestions should be returned"
        },
        "timeout": {
          "type" : "time",
          "description" : "Explicit operation timeout"
        },
        "version": {
          "type" : "boolean",
          "description" : "Specify whether to return document version as part of a hit"
        }
      }
    },
    "body": {
      "description": "The search definition using the Query DSL"
    }
  }
}
